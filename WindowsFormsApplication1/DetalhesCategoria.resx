<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rQBAsBoAvqICIiD/2Q==
</value>
  </data>
</root>